# automatically generated by the FlatBuffers compiler, do not modify

# namespace: fbs_test

import flatbuffers

class Identity(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsIdentity(cls, buf, offset):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = Identity()
        x.Init(buf, n + offset)
        return x

    # Identity
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # Identity
    def Id(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int16Flags, o + self._tab.Pos)
        return 0

    # Identity
    def Key(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return ""

def IdentityStart(builder): builder.StartObject(2)
def IdentityAddId(builder, id): builder.PrependInt16Slot(0, id, 0)
def IdentityAddKey(builder, key): builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(key), 0)
def IdentityEnd(builder): return builder.EndObject()
